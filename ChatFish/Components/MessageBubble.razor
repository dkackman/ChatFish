@using Ganss.Xss
@using ChatFish.State
@inject HtmlSanitizer Sanitizer

<div class="message-bubble @(IsVisible ? "visible" : "hidden") @Sanitizer.Sanitize(Message.Modifier) @FishDirection.ToString().ToLower()"
    role="status" aria-live="polite">
    @(Sanitizer.Sanitize(Message.Message))
</div>

<style>
    .message-bubble {
        background: radial-gradient(circle at top left, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));
        border: 2px solid rgba(255, 255, 255, 0.6);
        /* Increase border-radius for a more circular shape */
        border-radius: 50%;
        padding: 30px;
        /* Adjust padding for better content fit */
        max-width: 200px;
        min-width: 100px;
        word-wrap: break-word;
        overflow-wrap: break-word;
        word-break: break-word;
        white-space: normal;
        transition: opacity 0.5s ease-in-out;
        box-shadow: inset -5px -5px 15px rgba(255, 255, 255, 0.5),
            inset 5px 5px 15px rgba(255, 255, 255, 0.2);

        backdrop-filter: blur(2px);
        text-align: center;
        /* Removed display: flex and related properties */
        /* display: flex; */
        /* justify-content: center; */
        /* align-items: center; */
    }

    .message-bubble::after {
        content: '';
        position: absolute;
        top: -10%;
        left: -10%;
        width: 120%;
        height: 120%;
        background: radial-gradient(circle at top left, rgba(255, 255, 255, 0.5), transparent);
        transform: rotate(45deg);
        border-radius: 50%;
    }

    /* Adjust the bubble position based on the fish direction */
    .message-bubble.left {
        transform: translateX(-33%);

        /* Move bubble ahead of left-facing fish */
    }

    .message-bubble.right {
        transform: translateX(33%);

        /* Move bubble ahead of right-facing fish */
    }

    /* Trailing bubbles for left-facing fish */
    .message-bubble.left::before,
    .message-bubble.left::after {
        animation: floatLeft 3s infinite ease-in-out;
        content: '';
        position: absolute;
        background-color: rgba(255, 255, 255, 0.4);
        border: 1px solid rgba(255, 255, 255, 0.6);
        border-radius: 50%;
    }

    .message-bubble.left::before {
        width: 15px;
        height: 15px;
        left: 50%;
        top: 110%;
        transform: translateX(-50%);
    }

    .message-bubble.left::after {
        width: 10px;
        height: 10px;
        left: 60%;
        top: 130%;
        transform: translateX(-50%);
    }

    /* Trailing bubbles for right-facing fish */
    .message-bubble.right::before,
    .message-bubble.right::after {
        animation: floatRight 3s infinite ease-in-out;
        content: '';
        position: absolute;
        background-color: rgba(255, 255, 255, 0.4);
        border: 1px solid rgba(255, 255, 255, 0.6);
        border-radius: 50%;
    }

    .message-bubble.right::before {
        width: 15px;
        height: 15px;
        left: 50%;
        top: 105%;
        transform: translateX(-50%);
    }

    .message-bubble.right::after {
        width: 10px;
        height: 10px;
        left: 40%;
        top: 110%;
        transform: translateX(-50%);
    }

    @@keyframes floatLeft {

        0%,
        100% {
            opacity: 1;
            transform: translateX(-50%) translateY(0) scale(1);
        }

        50% {
            opacity: 0.5;
            transform: translateX(-60%) translateY(-10%) scale(0.8);
        }
    }

    @@keyframes floatRight {

        0%,
        100% {
            opacity: 1;
            transform: translateX(-50%) translateY(0) scale(1);
        }

        50% {
            opacity: 0.5;
            transform: translateX(-40%) translateY(-10%) scale(0.8);
        }
    }

    .message-bubble.hidden {
        opacity: 0;
    }

    .message-bubble.visible {
        opacity: 1;
    }

    .message-bubble.shout {
        font-weight: bold;
        text-transform: uppercase;
        font-size: larger;
        color: #FF0000;
    }

    .message-bubble.whisper {
        font-weight: italic;
        text-transform: lowercase;
        font-size: smaller;
        color: #60666e;
    }

    /* ... Add more modifier styles as needed ... */
</style>

@code {
    [Parameter] public ChatMessage Message { get; set; } = new();
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public Direction FishDirection { get; set; }
}